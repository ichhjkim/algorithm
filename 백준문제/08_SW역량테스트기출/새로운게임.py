# N N, K
# 흰, 빨, 파
# 말은 1-K까지 번호
# 이동방향 : 위/아래/왼/오

# 턴 한번은 1-k 말까지 순서대로 이동
# 이동시 올려져 있는 말도 같이 이동
# 말이 4개쌓이면 종료
# 이동하려는 칸이 흰색인 경우 이동
# 쌓일 때 가장 뒤에 올라감 append

# 빨간색이면 이동한 후에
    # 이동하려는 칸의 말을 반대로 바꿔서 합친다.

# 파란색이면 이동 방향을 반대로 하고, 한칸만 이동 근데 그 칸도 파란색이면 이동 안하고 방향만 바꿈
# 체스판을 벗어나는 경우, 이동방향을 반대로 하고 한칸만 이동 근데 그 한칸도 파란색이면 이동하지 않고 방향만 바꿈
# 이동은 첫번째 말 기준으로

# 게임이 종료되는 턴을 반환
# 단 타임이 1000 > 이면 -1 출력

N, K = map(int, input())
dx = [0, 0, -1, 1]
dy = [1, -1, 0, 0]
board = [list(map(int, input().split())) for _ in range(N)]

# 번호가 홀수면 -1 하고 짝수면 1해주기
# 이동할 때 마다 말의 위치 업데이트
points = [0]*K # 번호별 말의 위치, 방향 저장
visited = [[]*N for _ in range(N)] ## 보드별 말의 위치 저장

for i in range(K):
    points



